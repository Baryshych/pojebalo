# Makefile.in generated by automake 1.9.6 from Makefile.am.
# lqr/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/liblqr-1
pkglibdir = $(libdir)/liblqr-1
pkgincludedir = $(includedir)/liblqr-1
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
subdir = lqr
DIST_COMMON = $(lqr_include0_HEADERS) $(lqr_include_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(lqrdir)" "$(DESTDIR)$(lqr_includedir)" \
	"$(DESTDIR)$(lqr_include0dir)"
lqrLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lqr_LTLIBRARIES)
am__DEPENDENCIES_1 =
liblqr_1_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_liblqr_1_la_OBJECTS = lqr_gradient.lo lqr_rwindow.lo lqr_energy.lo \
	lqr_cursor.lo lqr_carver.lo lqr_carver_list.lo \
	lqr_carver_bias.lo lqr_carver_rigmask.lo lqr_vmap.lo \
	lqr_vmap_list.lo lqr_progress.lo
liblqr_1_la_OBJECTS = $(am_liblqr_1_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(liblqr_1_la_SOURCES)
DIST_SOURCES = $(liblqr_1_la_SOURCES)
lqr_includeHEADERS_INSTALL = $(INSTALL_HEADER)
lqr_include0HEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(lqr_include_HEADERS) $(lqr_include0_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /DL/Hackathon_2020/liblqr-1-0.4.2/missing --run aclocal-1.9 
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /DL/Hackathon_2020/liblqr-1-0.4.2/missing --run tar
API_VERSION = 1
AR = ar
AS = as
AUTOCONF = ${SHELL} /DL/Hackathon_2020/liblqr-1-0.4.2/missing --run autoconf
AUTOHEADER = ${SHELL} /DL/Hackathon_2020/liblqr-1-0.4.2/missing --run autoheader
AUTOMAKE = ${SHELL} /DL/Hackathon_2020/liblqr-1-0.4.2/missing --run automake-1.9
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DATADIR = ${datarootdir}/liblqr-1
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
FVISIBILITY_FLAG = -fvisibility="hidden"
GLIB_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
GLIB_DIR = /usr/lib/x86_64-linux-gnu
GLIB_LIBS = -lglib-2.0
GREP = /bin/grep
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INSTMAN_FALSE = 
INSTMAN_TRUE = #
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBRARY_BASE_NAME = lqr
LIBRARY_NAME = liblqr-1
LIBRARY_SNAME = lqr-1
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LTVERSION = 3:2:3
LT_NOUNDEF_FLAG = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /DL/Hackathon_2020/liblqr-1-0.4.2/missing --run makeinfo
MANIFEST_TOOL = :
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = liblqr-1
PACKAGE_BUGREPORT = 
PACKAGE_NAME = liblqr-1
PACKAGE_STRING = liblqr-1 0.4.2
PACKAGE_TARNAME = liblqr-1
PACKAGE_URL = 
PACKAGE_VERSION = 0.4.2
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 0.4.2
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /DL/Hackathon_2020/liblqr-1-0.4.2/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
lqr_LTLIBRARIES = liblqr-1.la
lqrdir = $(libdir)
liblqr_1_la_SOURCES = \
	lqr.h		\
	lqr_all.h	\
	lqr_base.h      \
	lqr_gradient.c  \
	lqr_gradient.h  \
	lqr_gradient_pub.h  \
	lqr_gradient_priv.h  \
	lqr_rwindow.c  \
	lqr_rwindow.h  \
	lqr_rwindow_pub.h  \
	lqr_rwindow_priv.h  \
	lqr_energy.c  \
	lqr_energy.h  \
	lqr_energy_pub.h  \
	lqr_energy_priv.h  \
	lqr_cursor.c    \
	lqr_cursor.h    \
	lqr_cursor_pub.h    \
	lqr_cursor_priv.h    \
	lqr_carver.c    \
	lqr_carver.h    \
	lqr_carver_pub.h    \
	lqr_carver_priv.h    \
	lqr_carver_macros_priv.h    \
	lqr_carver_list.c    \
	lqr_carver_list.h    \
	lqr_carver_list_pub.h    \
	lqr_carver_list_priv.h    \
	lqr_carver_bias.c    \
	lqr_carver_bias.h    \
	lqr_carver_bias_pub.h    \
	lqr_carver_bias_priv.h    \
	lqr_carver_rigmask.c    \
	lqr_carver_rigmask.h    \
	lqr_carver_rigmask_pub.h    \
	lqr_carver_rigmask_priv.h    \
	lqr_vmap.c \
	lqr_vmap.h \
	lqr_vmap_pub.h \
	lqr_vmap_priv.h \
	lqr_vmap_list.c \
	lqr_vmap_list.h \
	lqr_vmap_list_pub.h \
	lqr_vmap_list_priv.h \
	lqr_progress.c  \
	lqr_progress.h  \
	lqr_progress_pub.h  \
	lqr_progress_priv.h

liblqr_1_la_LDFLAGS = -version-info 3:2:3 
liblqr_1_la_LIBADD = $(GLIB_LIBS) -lm
AM_CPPFLAGS = \
	-DDATADIR=\""$(DATADIR)"\"		\
	-I$(top_srcdir)		\
	-I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include		\
	-I$(includedir)		\
	-fvisibility="hidden"

lqr_include0_HEADERS = lqr.h
lqr_include0dir = $(includedir)/lqr-1
lqr_include_HEADERS = lqr_base.h \
		      lqr_gradient_pub.h \
		      lqr_rwindow_pub.h \
		      lqr_energy_pub.h \
		      lqr_cursor_pub.h \
		      lqr_carver_pub.h \
		      lqr_carver_list_pub.h \
		      lqr_carver_bias_pub.h    \
		      lqr_carver_rigmask_pub.h    \
		      lqr_vmap_pub.h \
		      lqr_vmap_list_pub.h \
		      lqr_progress_pub.h

lqr_includedir = $(includedir)/lqr-1/lqr
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  lqr/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  lqr/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-lqrLTLIBRARIES: $(lqr_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(lqrdir)" || $(mkdir_p) "$(DESTDIR)$(lqrdir)"
	@list='$(lqr_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(lqrLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(lqrdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(lqrLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(lqrdir)/$$f"; \
	  else :; fi; \
	done

uninstall-lqrLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lqr_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(lqrdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(lqrdir)/$$p"; \
	done

clean-lqrLTLIBRARIES:
	-test -z "$(lqr_LTLIBRARIES)" || rm -f $(lqr_LTLIBRARIES)
	@list='$(lqr_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
liblqr-1.la: $(liblqr_1_la_OBJECTS) $(liblqr_1_la_DEPENDENCIES) 
	$(LINK) -rpath $(lqrdir) $(liblqr_1_la_LDFLAGS) $(liblqr_1_la_OBJECTS) $(liblqr_1_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/lqr_carver.Plo
include ./$(DEPDIR)/lqr_carver_bias.Plo
include ./$(DEPDIR)/lqr_carver_list.Plo
include ./$(DEPDIR)/lqr_carver_rigmask.Plo
include ./$(DEPDIR)/lqr_cursor.Plo
include ./$(DEPDIR)/lqr_energy.Plo
include ./$(DEPDIR)/lqr_gradient.Plo
include ./$(DEPDIR)/lqr_progress.Plo
include ./$(DEPDIR)/lqr_rwindow.Plo
include ./$(DEPDIR)/lqr_vmap.Plo
include ./$(DEPDIR)/lqr_vmap_list.Plo

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-lqr_includeHEADERS: $(lqr_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(lqr_includedir)" || $(mkdir_p) "$(DESTDIR)$(lqr_includedir)"
	@list='$(lqr_include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(lqr_includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(lqr_includedir)/$$f'"; \
	  $(lqr_includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(lqr_includedir)/$$f"; \
	done

uninstall-lqr_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(lqr_include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(lqr_includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(lqr_includedir)/$$f"; \
	done
install-lqr_include0HEADERS: $(lqr_include0_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(lqr_include0dir)" || $(mkdir_p) "$(DESTDIR)$(lqr_include0dir)"
	@list='$(lqr_include0_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(lqr_include0HEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(lqr_include0dir)/$$f'"; \
	  $(lqr_include0HEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(lqr_include0dir)/$$f"; \
	done

uninstall-lqr_include0HEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(lqr_include0_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(lqr_include0dir)/$$f'"; \
	  rm -f "$(DESTDIR)$(lqr_include0dir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(lqrdir)" "$(DESTDIR)$(lqr_includedir)" "$(DESTDIR)$(lqr_include0dir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-lqrLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-lqrLTLIBRARIES install-lqr_include0HEADERS \
	install-lqr_includeHEADERS

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-lqrLTLIBRARIES \
	uninstall-lqr_include0HEADERS uninstall-lqr_includeHEADERS

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-lqrLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am \
	install-lqrLTLIBRARIES install-lqr_include0HEADERS \
	install-lqr_includeHEADERS install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am \
	uninstall-lqrLTLIBRARIES uninstall-lqr_include0HEADERS \
	uninstall-lqr_includeHEADERS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
